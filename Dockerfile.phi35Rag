# Base Image
FROM python:3.13.1-slim

# Set environment variables for optimization
ENV PYTHONUNBUFFERED=1 \
    PYTHONOPTIMIZE=1 \
    PIP_NO_CACHE_DIR=1 \
    FORCE_CMAKE=1 \
    KMP_DUPLICATE_LIB_OK=TRUE

# Set working directory
WORKDIR /app

# Upgrade pip and install necessary system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 \
    python3-pip \
    libomp-dev \
    libgomp1 \
    wget \
    curl  \
    git && \
    python -m pip install --upgrade pip && \
    apt-get clean && rm -rf /var/lib/apt/lists/*


# Install build-essential only when needed and remove after use
RUN apt-get update && apt-get install -y build-essential && \
    python3 -m pip install llama-cpp-python --verbose && \
    apt-get purge -y build-essential && \
    apt-get autoremove -y && \
    apt-get clean -y

# Install Python dependencies with prebuilt wheels
RUN python3 -m pip install \
    requests \
    beautifulsoup4 \
    rich \
    tiktoken \
    PyMuPDF \
    langchain \
    langchain-community \
    faiss-cpu 

# Download model files with robust error handling
RUN curl -o /app/all-MiniLM-L6-v2-ggml-model-f16.gguf -L "https://huggingface.co/second-state/All-MiniLM-L6-v2-Embedding-GGUF/resolve/main/all-MiniLM-L6-v2-ggml-model-f16.gguf" || \
    { echo "Failed to download all-MiniLM-L6-v2.F16.gguf" && exit 1; } && \
    curl -o /app/Phi-3.5-mini-instruct-Q6_K.gguf -L "https://huggingface.co/bartowski/Phi-3.5-mini-instruct-GGUF/resolve/main/Phi-3.5-mini-instruct-Q6_K.gguf" || \
    { echo "Failed to download Phi-3.5-mini-instruct_Uncensored-Q4_K_M.gguf" && exit 1; }

# Final cleanup
RUN rm -rf /root/.cache/pip /tmp/* /var/tmp/*
