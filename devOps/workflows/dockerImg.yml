# name: Build and Push Multi-Architecture Docker Image for RAG

# on:
#   push:
#     branches: ["workflow", "dockerFile"]
#   workflow_dispatch:

# env:
#   REGISTRY: ghcr.io
#   IMAGE_NAME: ${{ github.repository }}

# jobs:
#   build-and-push-amd64:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#       packages: write

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Log in to the Container registry
#         uses: docker/login-action@v2
#         with:
#           registry: ${{ env.REGISTRY }}
#           username: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3

#       - name: Build and push AMD64 Docker image
#         id: push_amd64
#         uses: docker/build-push-action@v4
#         with:
#           context: .
#           file: ./Dockerfile.phi35Rag
#           push: true
#           platforms: linux/amd64
#           tags: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:temp-amd64"

#   build-and-push-arm64:
#     runs-on: ubuntu-24.04-arm
#     permissions:
#       contents: read
#       packages: write

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Log in to the Container registry
#         uses: docker/login-action@v2
#         with:
#           registry: ${{ env.REGISTRY }}
#           username: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3

#       - name: Build and push ARM64 Docker image
#         id: push_arm64
#         uses: docker/build-push-action@v4
#         with:
#           context: .
#           file: ./Dockerfile.phi35Rag
#           push: true
#           platforms: linux/arm64
#           tags: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:temp-arm64"

#   create-multiarch-manifest:
#     runs-on: ubuntu-latest
#     needs: [build-and-push-amd64, build-and-push-arm64]  # Ensures both images are built first
#     permissions:
#       contents: read
#       packages: write

#     steps:
#       - name: Log in to the Container registry
#         uses: docker/login-action@v2
#         with:
#           registry: ${{ env.REGISTRY }}
#           username: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}

#       - name: Create and Push Multi-Architecture Manifest
#         run: |
#           docker buildx create --use
#           docker buildx imagetools create -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
#             ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:temp-amd64 \
#             ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:temp-arm64
